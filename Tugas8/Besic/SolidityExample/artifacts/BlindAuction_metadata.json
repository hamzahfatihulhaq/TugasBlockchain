{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "biddingTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "revealTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "beneficiaryAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AuctionEndAlreadyCalled",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooEarly",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "TooLate",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "auctionEnd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiary",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					}
				],
				"name": "bid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "biddingEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bids",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					},
					{
						"internalType": "bool[]",
						"name": "fakes",
						"type": "bool[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "secrets",
						"type": "bytes32[]"
					}
				],
				"name": "reveal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "revealEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"AuctionEndAlreadyCalled()": [
					{
						"notice": "Fungsi AuctionEnd telah dipanggil."
					}
				],
				"TooEarly(uint256)": [
					{
						"notice": "Fungsi telah dipanggil terlalu dini.  Coba lagi pada `time`."
					}
				],
				"TooLate(uint256)": [
					{
						"notice": "Fungsi telah dipanggil terlambat. Itu tidak dapat dipanggil setelah `time`."
					}
				]
			},
			"kind": "user",
			"methods": {
				"auctionEnd()": {
					"notice": "Akhiri lelang dan kirimkan penawaran tertinggi ke beneficiary."
				},
				"bid(bytes32)": {
					"notice": "Tempatkan tawaran buta dengan `blindedBid` = keccak256(abi.encodePacked(value, fake, secret)). Eter yang dikirim hanya dikembalikan jika tawaran  diungkapkan dengan benar fase pengungkapan. Tawaran valid jika ter yang dikirim bersama dengan tawaran setidaknya \"nilai\" dan  \"palsu\" tidak benar. Mengatur \"palsu\" menjadi benar dan mengirimkan bukan jumlah yang tepat adalah cara untuk menyembunyikan tawaran nyata tetapi tetap melakukan setoran yang diperlukan. Alamat yang sama dapat  mengajukan beberapa tawaran."
				},
				"reveal(uint256[],bool[],bytes32[])": {
					"notice": "Ungkapkan tawaran buta Anda. Anda akan mendapatkan pengembalian dana untuk semua tawaran tidak valid yang dibutakan dengan benar dan untuk  semua tawaran kecuali yang benar-benar tertinggi."
				},
				"withdraw()": {
					"notice": "Tarik tawaran yang overbid."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Besic/SolidityExample/blindAuction.sol": "BlindAuction"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Besic/SolidityExample/blindAuction.sol": {
			"keccak256": "0x8a17db20e40817442aea6b715afca0213dfe09a623f55794b6546161b583ff0a",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://8132c1e8a18011be38ec82327478c4f0ab8b234b5457ba19a8656ce1959c102e",
				"dweb:/ipfs/QmUfrWt2iQmEh4bvYKWUQSsFFDEtNuGYyFT1Ub6TAFWiXf"
			]
		}
	},
	"version": 1
}